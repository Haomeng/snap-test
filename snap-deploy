#!/bin/bash
#
# A script for testing OpenStack snap packages on a single node.
# The node is expected to be Ubuntu 16.04 (xenial).
#

set -ex

if [ "$EUID" -ne 0 ]
  then echo "This script must be run as root."
  exit
fi

add-apt-repository --yes cloud-archive:newton
apt update
apt install --yes python-openstackclient

# install and configure rabbitmq
function install_configure_rabbitmq {
  apt install --yes rabbitmq-server
  rabbitmqctl add_user openstack openstack-password
  rabbitmqctl set_permissions openstack ".*" ".*" ".*"
}

# install and configure mysql
function install_configure_mysql {
  DEBIAN_FRONTEND='noninteractive' apt install --yes mysql-server python-pymysql
  mysqladmin -u root password mysql-password
  cat > /etc/mysql/conf.d/openstack.cnf << EOF
  [mysqld]
  bind-address = 127.0.0.1
  default-storage-engine = innodb
  innodb_file_per_table
  max_connections = 4096
  collation-server = utf8_general_ci
  character-set-server = utf8
EOF
  systemctl restart mysql
} 

# install and configure keystone
function install_configure_keystone {
  apt install --yes keystone apache2 libapache2-mod-wsgi
  mysql -u root --password=mysql-password -e "CREATE DATABASE keystone;
  GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' \
    IDENTIFIED BY 'KEYSTONE_DBPASS';
  GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' \
    IDENTIFIED BY 'KEYSTONE_DBPASS';"
  echo "manual" > /etc/init/keystone.override
  token=$(openssl rand -hex 10)
  sed -i "s/#admin_token = <None>/admin_token = $token/" /etc/keystone/keystone.conf
  sed -i 's/connection = sqlite\:\/\/\/\/var\/lib\/keystone\/keystone\.db/connection = mysql\+pymysql\:\/\/keystone\:KEYSTONE_DBPASS\@127.0.0.1\/keystone/' /etc/keystone/keystone.conf
  sed -i "s/#provider = fernet/provider = fernet/" /etc/keystone/keystone.conf
  su -s /bin/sh -c "keystone-manage db_sync" keystone
  keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
  keystone-manage credential_setup --keystone-user keystone --keystone-group keystone
  systemctl restart apache2
  rm -f /var/lib/keystone/keystone.db
}

# create keystone service entity and endpoints
function create_keystone_service_endpoints {
  keystone-manage bootstrap --bootstrap-password ADMIN_PASS \
  --bootstrap-admin-url http://127.0.0.1:35357/v3/ \
  --bootstrap-internal-url http://127.0.0.1:35357/v3/ \
  --bootstrap-public-url http://127.0.0.1:5000/v3/ \
  --bootstrap-region-id RegionOne
}

# create domains and demo project, user, and role
function create_identities {
  openstack project create --domain default --description "Service Project" service
  openstack project create --domain default --description "Demo Project" demo
  openstack user create --domain default --password password demo
  openstack role create user
  openstack role add --project demo --user demo user
}

# create env var scripts
function create_env_scripts {
  mkdir -p ~/snaps/
  cat > ~/snaps/admin-openrc << EOF
  export OS_PROJECT_DOMAIN_NAME=default
  export OS_USER_DOMAIN_NAME=default
  export OS_PROJECT_NAME=admin
  export OS_USERNAME=admin
  export OS_PASSWORD=ADMIN_PASS
  export OS_AUTH_URL=http://127.0.0.1:35357/v3
  export OS_IDENTITY_API_VERSION=3
  export OS_IMAGE_API_VERSION=2
EOF

  cat > ~/snaps/demo-openrc << EOF
  export OS_PROJECT_DOMAIN_NAME=default
  export OS_USER_DOMAIN_NAME=default
  export OS_PROJECT_NAME=demo
  export OS_USERNAME=demo
  export OS_PASSWORD=password
  export OS_AUTH_URL=http://127.0.0.1:5000/v3
  export OS_IDENTITY_API_VERSION=3
  export OS_IMAGE_API_VERSION=2
EOF
}

# install and configure glance
function install_configure_glance {
  snap install --edge glance
  mysql -u root --password=mysql-pass -e "CREATE DATABASE glance;
  GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' \
    IDENTIFIED BY 'GLANCE_DBPASS';
  GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' \
    IDENTIFIED BY 'GLANCE_DBPASS';"
  openstack user create --domain default --password password glance
  openstack role add --project service --user glance admin
  cat > /var/snap/glance/common/etc/glance.conf.d/glance-localhost.conf << EOF
  [database]
  connection = mysql+pymysql://glance:GLANCE_DBPASS@127.0.0.1/glance
  [keystone_authtoken]
  auth_uri = http://127.0.0.1:5000
  auth_url = http://127.0.0.1:35357
  memcached_servers = 127.0.0.1:11211
  auth_type = password
  project_domain_name = default
  user_domain_name = default
  project_name = service
  username = glance
  password = password
  [paste_deploy]
  flavor = keystone
EOF
  systemctl restart snap.glance.api snap.glance.registry
  glance.manage db_sync
}

# create glance service entity and endpoints
function create_glance_service_endpoints {
  openstack service create --name glance --description "OpenStack Image" image
  openstack endpoint create --region RegionOne image public http://127.0.0.1:9292
  openstack endpoint create --region RegionOne image internal http://127.0.0.1:9292
  openstack endpoint create --region RegionOne image admin http://127.0.0.1:9292
}

install_configure_rabbitmq
install_configure_mysql
install_configure_keystone
create_keystone_service_endpoints

export OS_USERNAME=admin
export OS_PASSWORD=ADMIN_PASS
export OS_PROJECT_NAME=admin
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_DOMAIN_NAME=default
export OS_AUTH_URL=http://127.0.0.1:35357/v3
export OS_IDENTITY_API_VERSION=3

create_identities
create_env_scripts
install_configure_glance
create_glance_service_endpoints

unset OS_USERNAME
unset OS_PASSWORD
unset OS_PROJECT_NAME
unset OS_USER_DOMAIN_NAME
unset OS_PROJECT_DOMAIN_NAME
unset OS_AUTH_URL
unset OS_IDENTITY_API_VERSION
